apply plugin: 'com.android.application'

ext {
    def mygetGitCommitsAmount = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--all', '--count'
            standardOutput = stdout
        }
        return stdout.toString().toInteger()
    }

    def mygetVersionCode = { ->
        def patch = mygetGitCommitsAmount()
        return (Integer)release_count * 1000 + patch
    }

    def mygetVersionName = { ->
        return '0.' + release_count + '.' + mygetGitCommitsAmount()
    }

    def mygetName = { ->
        return ('Softy_'+myVName)
    }

    myVName = mygetVersionName()
    myVCode = mygetVersionCode()
    myName = mygetName()
}

android {
    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'Aa1234'
            storeFile file('C:/Users/lenovo/.android/keystore.jks')
            storePassword 'Aa1234'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.lenovo.softy"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode myVCode
        versionName myVName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            setProperty("archivesBaseName", myName)
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            android.applicationVariants.all { variant ->

                variant.outputs.all { output ->
                    outputFileName =
                            outputFileName.replace("-debug", "")
                    outputFileName =
                            outputFileName.replace("-release", "")
                    outputFileName =
                            outputFileName.replace("-full", "")
                }
            }
        }
    }
    flavorDimensions "ver"
    productFlavors {
        full {
            dimension "ver"
            minSdkVersion 23
            applicationId 'com.example.lenovo.softy.full'
            targetSdkVersion 28
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            manifestPlaceholders = [orientation:"portrait"]
        }
        dev {
            dimension "ver"
            versionNameSuffix "-dev"
            minSdkVersion 23
            applicationId 'com.example.lenovo.softy.dev'
            targetSdkVersion 28
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            manifestPlaceholders = [orientation:"sensor"]
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task('increaseVersionCode') << {
    def counter = Integer.parseInt(release_count) + 1
    ant.propertyfile(file: "../gradle.properties") {
        entry(key: "release_count", value: counter)
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateFullReleaseBuildConfig') {
        task.dependsOn 'increaseVersionCode'
    }
}
